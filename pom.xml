<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.pentaho</groupId>
  <artifactId>pentaho-metaverse-ee</artifactId>
  <packaging>jar</packaging>
  <version>1.0.0-SNAPSHOT</version>

  <parent>
    <groupId>org.pentaho</groupId>
    <!-- TODO: change this to the pentaho-ee-jar-parent-pom to add the Proguard obfuscation -->
    <artifactId>pentaho-ce-jar-parent-pom</artifactId>
    <!-- recommend only setting this to a specific version upon migration to maintenance -->
    <version>1.0.1</version>
  </parent>

  <name>Pentaho Enterprise Edition Project: ${project.artifactId}</name>
  <description>a Pentaho closed source project</description>
  <url>http://www.pentaho.com</url>

  <licenses>
    <license>
      <name>Pentaho Proprietary License</name>
      <!-- TODO: figure out if the proprietary license is publically available -->
      <url>http://www.pentaho.com</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <developers>
    <developer>
      <name>Rob Fellows</name>
      <email>rfellows@pentaho.com</email>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <properties>
    <platform.plugin.name>metaverse</platform.plugin.name>
    <pdi.plugin.name>pdi-metaverse-extensions</pdi.plugin.name>
    <blueprints-core.version>2.5.0</blueprints-core.version>
    <pentaho-platform-api.version>METAVERSE-SNAPSHOT</pentaho-platform-api.version>
    <pentaho-platform-core.version>TRUNK-SNAPSHOT</pentaho-platform-core.version>
    <pentaho-platform-repository.version>TRUNK-SNAPSHOT</pentaho-platform-repository.version>
    <jcr.version>2.0</jcr.version>
    <spring.version>2.5.6</spring.version>
    <mockito-all.version>1.9.5</mockito-all.version>
    <pentaho-pur-repository.version>
      <!-- 5.1.0.0-752 -->
      TRUNK-SNAPSHOT
    </pentaho-pur-repository.version>
    <jersey.version>1.16</jersey.version>
    <slf4j.version>1.7.7</slf4j.version>
    <flexjson.version>2.1</flexjson.version>
    <proguard.version>4.9</proguard.version>
  </properties>

  <scm>
    <connection>scm:git:git@github.com:${github.user}/${project.artifactId}.git</connection>
    <url>scm:git:git@github.com:${github.user}/${project.artifactId}.git</url>
    <developerConnection>scm:git:git@github.com:${github.user}/${project.artifactId}.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <dependencies>

    <!-- 'COMPILE' SCOPED DEPS -->
    <dependency>
      <groupId>com.tinkerpop.blueprints</groupId>
      <artifactId>blueprints-core</artifactId>
      <version>${blueprints-core.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-api</artifactId>
      <version>${pentaho-platform-api.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-core</artifactId>
      <version>${pentaho-platform-core.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>javax.jcr</groupId>
      <artifactId>jcr</artifactId>
      <version>${jcr.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring</artifactId>
      <version>${spring.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-repository</artifactId>
      <version>${pentaho-platform-repository.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pur-repository-plugin</artifactId>
      <version>${pentaho-pur-repository.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-core</artifactId>
      <version>${jersey.version}</version>
      <scope>compile</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>net.sf.flexjson</groupId>
      <artifactId>flexjson</artifactId>
      <version>${flexjson.version}</version>
      <scope>compile</scope>
    </dependency>

    <!-- 'RUNTIME' SCOPED DEPS -->

    <!-- 'PROVIDED' SCOPED DEPS -->

    <!-- 'TEST' SCOPED DEPS -->

    <dependency>
      <groupId>com.tinkerpop</groupId>
      <artifactId>frames</artifactId>
      <version>2.5.0</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${mockito-all.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-core-test</artifactId>
      <version>${pentaho-platform-repository.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.168</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>
  <build>
    <plugins>

      <!-- configure up the platform-plugin assembly -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <!--<configuration>
          <finalName>${platform.plugin.name}-${project.version}</finalName>
          <appendAssemblyId>false</appendAssemblyId>
          <descriptors>
            <descriptor>src/assembly/platform-plugin.xml</descriptor>
            <descriptor>src/assembly/pdi-plugin.xml</descriptor>
          </descriptors>
        </configuration>
      -->
        <executions>
          <execution>
            <id>make-platform-plugin</id>
            <phase>install</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${platform.plugin.name}-${project.version}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptor>src/assembly/platform-plugin.xml</descriptor>
            </configuration>
          </execution>
          <execution>
            <id>make-pdi-plugin</id>
            <phase>install</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <finalName>${pdi.plugin.name}-${project.version}</finalName>
              <appendAssemblyId>false</appendAssemblyId>
              <descriptor>src/assembly/pdi-plugin.xml</descriptor>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.1</version>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
        </configuration>
      </plugin>

      <!-- remove this once it's in the parent pom -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
          <check>
            <branchRate>80</branchRate>
            <lineRate>90</lineRate>
            <haltOnFailure>false</haltOnFailure>
            <totalBranchRate>80</totalBranchRate>
            <totalLineRate>90</totalLineRate>
            <packageLineRate>90</packageLineRate>
            <packageBranchRate>80</packageBranchRate>
          </check>
        </configuration>
      </plugin>

      <!-- remove this once it's in the parent pom -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.5</version>
        <executions>
          <execution>
            <id>add-test-source</id>
            <phase>process-resources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>src/it/java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- remove this once it's in the parent pom -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.17</version>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Override here to allow "mvn checkstyle:checkstyle" to work against pentaho standards -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${maven-checkstyle-plugin.version}</version>
        <configuration>
          <configLocation>${checkstyle-config-url}</configLocation>
          <propertiesLocation>${checkstyle-properties-url}</propertiesLocation>
          <linkXRef>true</linkXRef>
          <cacheFile></cacheFile>
        </configuration>
      </plugin>

    </plugins>
  </build>


  <!-- this is for bootstrapping only; you should really just add this to your settings.xml -->
  <repositories>
    <repository>
      <id>pentaho.resolve.repo</id>
      <name>Pentaho Group Resolve Repository</name>
      <url>http://nexus.pentaho.org/content/groups/omni/</url>
      <releases>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>
    <repository>
      <id>old.pentaho.resolve.repo</id>
      <name>Old (Artifactory) Pentaho Group Resolve Repository</name>
      <url>http://repo.pentaho.org/artifactory/repo/</url>
      <releases>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </releases>
      <snapshots>
        <updatePolicy>always</updatePolicy>
        <checksumPolicy>fail</checksumPolicy>
      </snapshots>
    </repository>
  </repositories>

  <profiles>
    <profile>
      <id>development</id>
      <activation>
        <activeByDefault>false</activeByDefault>
        <property>
          <name>env</name>
          <value>dev</value>
        </property>
      </activation>
    </profile>
    <profile>
      <id>production</id>
      <activation>
        <activeByDefault>true</activeByDefault>
        <property>
          <name>env</name>
          <value>prod</value>
        </property>
      </activation>
      <properties>
        <!-- set this flag to determine if the proguard obfuscation should run -->
        <obfuscate>true</obfuscate>
      </properties>

      <build>
        <plugins>
          <!-- Obfuscation -->
          <plugin>
            <groupId>com.github.wvengen</groupId>
            <artifactId>proguard-maven-plugin</artifactId>
            <version>2.0.5</version>
            <dependencies>
              <dependency>
                <groupId>net.sf.proguard</groupId>
                <artifactId>proguard-base</artifactId>
                <version>${proguard.version}</version>
                <scope>runtime</scope>
              </dependency>
            </dependencies>
            <executions>
              <execution>
                <id>obfuscation</id>
                <phase>package</phase>
                <goals>
                  <goal>proguard</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <proguardVersion>${proguard.version}</proguardVersion>
              <libs>
                <lib>${java.home}/lib/rt.jar</lib>
                <lib>${java.home}/lib/jsse.jar</lib>
                <lib>${java.home}/lib/jce.jar</lib>
              </libs>
              <obfuscate>${obfuscate}</obfuscate>
              <!-- replace the non-obfuscated jar with the obfuscated one -->
              <injar>${project.build.finalName}.jar</injar>
              <outjar>${project.build.finalName}.jar</outjar>
              <includeDependency>true</includeDependency>
              <exclusions>
                <exclusion>
                  <groupId>com.ibm.icu</groupId>
                  <artifactId>icu4j</artifactId>
                </exclusion>
              </exclusions>
              <addMavenDescriptor>true</addMavenDescriptor>
              <options>
                <!-- Standard configuration -->
                <option>
                  <![CDATA[
                    -dontoptimize
                    -dontshrink
                    -dontnote
                    -renamesourcefileattribute SourceFile
                    -ignorewarnings
                    -dontskipnonpubliclibraryclassmembers
                    -keepattributes Exceptions, InnerClasses, *Annotation*, Signature, EnclosingMethod, SourceFile, LineNumberTable
                    -printseeds

                    -printmapping ${project.build.directory}/${project.artifactId}-${project.version}.map

                    -keepclassmembers enum * {
                      public static **[] values();
                      public static ** valueOf(java.lang.String);
                    }

                    -keepclassmembers class * implements java.io.Serializable {
                       static final long serialVersionUID;
                       private void writeObject(java.io.ObjectOutputStream);
                       private void readObject(java.io.ObjectInputStream);
                       java.lang.Object writeReplace();
                       java.lang.Object readResolve();
                    }

                    -keep !abstract class * implements org.pentaho.platform.api.** { }
                  ]]>
                </option>

                <!-- Include any customizations to the obfuscation process -->
                <option>@src/assembly/proguard.pro</option>

              </options>
            </configuration>
          </plugin>
        </plugins>
      </build>

    </profile>
  </profiles>

</project>
