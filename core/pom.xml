<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>pentaho</groupId>
    <artifactId>pentaho-metaverse</artifactId>
    <version>9.0.0.0-SNAPSHOT</version>
  </parent>
  <groupId>pentaho</groupId>
  <artifactId>pentaho-metaverse-core</artifactId>
  <version>9.0.0.0-SNAPSHOT</version>
  <packaging>bundle</packaging>
  <name>${project.artifactId}</name>
  <description>Provides data lineage capabilities</description>
  <url>http://www.pentaho.com</url>
  <properties>
    <dependency.com.tinkerpop.frames.version>2.5.0</dependency.com.tinkerpop.frames.version>
    <exec-maven-plugin.version>1.3.2</exec-maven-plugin.version>
    <platform.plugin.name>platform</platform.plugin.name>
    <maven-pmd-plugin.version>3.2</maven-pmd-plugin.version>
    <pmd.rulesets.url>https://raw.githubusercontent.com/pentaho/pentaho-coding-standards/master/pmd/rulesets/java</pmd.rulesets.url>
    <maven-bundle-plugin.version>2.5.3</maven-bundle-plugin.version>
    <enunciate.version>1.27</enunciate.version>
    <gremlin-java.version>2.6.0</gremlin-java.version>
    <pdi.plugin.name>pdi</pdi.plugin.name>
    <dependency.commons-io.commons-io.version>2.4</dependency.commons-io.commons-io.version>
    <dependency.com.google.guava.guava.version>17.0</dependency.com.google.guava.guava.version>
    <pentaho-mongodb-plugin.version>9.0.0.0-SNAPSHOT</pentaho-mongodb-plugin.version>
    <platform.version>9.0.0.0-SNAPSHOT</platform.version>
    <metastore.version>9.0.0.0-SNAPSHOT</metastore.version>
    <!-- TODO: uncomment once https://jira.pentaho.com/browse/ENGOPS-4612 is resolved -->
    <!--<pdi.version>${project.version}</pdi.version>-->
    <maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>

    <commons-lang.version>2.6</commons-lang.version>
    <commons-vfs2.version>2.2</commons-vfs2.version>
    <dependency.com.tinkerpop.pipes.version>2.6.0</dependency.com.tinkerpop.pipes.version>
    <commons-collections.version>3.2.2</commons-collections.version>
  </properties>
  <dependencies>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-metaverse-api</artifactId>
      <version>${project.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-api</artifactId>
      <version>${platform.version}</version>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>metastore</artifactId>
      <version>${metastore.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tinkerpop.blueprints</groupId>
      <artifactId>blueprints-core</artifactId>
      <version>${dependency.com.tinkerpop.blueprints.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-configuration</groupId>
      <artifactId>commons-configuration</artifactId>
      <version>${dependency.commons-configuration.commons-configuration.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${dependency.com.google.guava.guava.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${dependency.commons-io.commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons-lang.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-vfs2</artifactId>
      <version>${commons-vfs2.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tinkerpop</groupId>
      <artifactId>pipes</artifactId>
      <version>${dependency.com.tinkerpop.pipes.version}</version>
    </dependency>
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>${commons-collections.version}</version>
    </dependency>
    <dependency>
      <groupId>com.tinkerpop.gremlin</groupId>
      <artifactId>gremlin-java</artifactId>
      <version>${gremlin-java.version}</version>
    </dependency>
    <dependency>
      <groupId>net.sf.flexjson</groupId>
      <artifactId>flexjson</artifactId>
      <version>${dependency.net.sf.flexjson.flexjson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-core</artifactId>
      <version>${dependency.pentaho.pentaho-platform-core.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>xercesImpl</artifactId>
          <groupId>xerces</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-platform-repository</artifactId>
      <version>${dependency.pentaho.pentaho-platform-repository.version}</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>jackson-jaxrs</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-xc</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-core-asl</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>
        <exclusion>
          <artifactId>jackson-mapper-asl</artifactId>
          <groupId>org.codehaus.jackson</groupId>
        </exclusion>		
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-core</artifactId>
      <version>${dependency.pentaho-kettle.kettle-core.version}</version>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <artifactId>xercesImpl</artifactId>
          <groupId>xerces</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>pentaho-kettle</groupId>
      <artifactId>kettle-engine</artifactId>
      <version>${dependency.pentaho-kettle.kettle-core.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.core</artifactId>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.compendium</artifactId>
    </dependency>
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-mongodb-plugin</artifactId>
      <version>${pentaho-mongodb-plugin.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.tinkerpop</groupId>
      <artifactId>frames</artifactId>
      <version>${dependency.com.tinkerpop.frames.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${dependency.junit.junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>${dependency.org.mockito.mockito-all.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-core</artifactId>
      <version>${dependency.org.powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <version>${dependency.org.powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <version>${dependency.org.powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-reflect</artifactId>
      <version>${dependency.org.powermock.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- TODO: uncomment once https://jira.pentaho.com/browse/ENGOPS-4612 is resolved -->
    <!--
    <dependency>
      <groupId>org.pentaho.di.plugins</groupId>
      <artifactId>meta-inject-plugin</artifactId>
      <version>${pdi.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho.di.plugins</groupId>
      <artifactId>pdi-core-plugins-impl</artifactId>
      <version>${pdi.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.pentaho.di.plugins</groupId>
      <artifactId>pentaho-streaming-jms-plugin</artifactId>
      <version>${pdi.version}</version>
      <scope>provided</scope>
    </dependency>-->
    <dependency>
      <groupId>pentaho</groupId>
      <artifactId>pentaho-mongo-utils</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>1.3.171</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>${maven-bundle-plugin.version}</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
            <Bundle-Version>${project.version}</Bundle-Version>
            <Import-Package>org.pentaho.dictionary,
              org.pentaho.metaverse.api,
              org.pentaho.metaverse.api.*,
              *</Import-Package>
            <Export-Package>org.pentaho.metaverse.client,
              org.pentaho.metaverse.analyzer.kettle,
              org.pentaho.metaverse.analyzer.kettle.*,
              org.pentaho.metaverse.util,
              org.pentaho.metaverse.graph,
              org.pentaho.metaverse.impl,
              org.pentaho.metaverse.messages,
              org.pentaho.metaverse.locator</Export-Package>
            <Bundle-Activator>org.pentaho.metaverse.util.MetaverseBundleActivator</Bundle-Activator>
          </instructions>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <targetJdk>${target.jdk.version}</targetJdk>
          <rulesets>
            <ruleset>${pmd.rulesets.url}/basic.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/optimizations.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/codesize.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/design.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/coupling.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/strings.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/unnecessary.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>${exec-maven-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>java</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>com.tinkerpop.gremlin</groupId>
            <artifactId>gremlin-groovy</artifactId>
            <version>${gremlin-java.version}</version>
          </dependency>
          <dependency>
            <groupId>pentaho-kettle</groupId>
            <artifactId>kettle-ui-swt</artifactId>
            <version>${dependency.pentaho-kettle.kettle-core.version}</version>
          </dependency>
          <dependency>
            <groupId>pentaho</groupId>
            <artifactId>pentaho-metaverse-api</artifactId>
            <version>${project.version}</version>
          </dependency>
        </dependencies>
        <configuration>
          <classpathScope>test</classpathScope>
          <includeProjectDependencies>true</includeProjectDependencies>
          <includePluginDependencies>true</includePluginDependencies>
          <executableDependency>
            <groupId>com.tinkerpop.gremlin</groupId>
            <artifactId>gremlin-groovy</artifactId>
          </executableDependency>
          <mainClass>com.tinkerpop.gremlin.groovy.console.Console</mainClass>
          <arguments>
            <argument>src/it/resources/metaverse-pdi.groovy</argument>
          </arguments>
          <systemProperties></systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${maven-jar-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>test-jar</goal>
            </goals>
            <phase>post-integration-test</phase>
            <configuration>
              <testClassesDirectory>target/it-classes</testClassesDirectory>
              <skipIfEmpty>true</skipIfEmpty>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
        <configuration>
          <targetJdk>${target.jdk.version}</targetJdk>
          <rulesets>
            <ruleset>${pmd.rulesets.url}/basic.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/optimizations.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/codesize.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/design.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/coupling.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/strings.xml</ruleset>
            <ruleset>${pmd.rulesets.url}/unnecessary.xml</ruleset>
          </rulesets>
        </configuration>
      </plugin>
    </plugins>
  </reporting>
</project>
